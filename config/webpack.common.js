const webpack = require('webpack')
const path = require('path')
const CleanWebpackPlugin = require('clean-webpack-plugin')
const HtmlWebpackPlugin = require('html-webpack-plugin')
const CopyWebpackPlugin = require('copy-webpack-plugin')

module.exports = {
  entry: ['./src/index.js'],
  output: {
    path: path.resolve(__dirname, '..', 'dist'),
    filename: '[name].[hash].bundle.js',
    chunkFilename: '[name].[hash].bundle.js',
    publicPath: '/',
  },
  module: {
    rules: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
        },
      },
      {
        test: /\.css$/i,
        use: ['style-loader', 'css-loader'],
      },
      {
        test: /\.(jpe?g|png|gif|svg)$/i, 
        loader: 'file-loader',
      }
    ],
  },
  resolve: {
    modules: [path.resolve(__dirname, '..', 'src'), 'node_modules'],
  },
  plugins: [
    new webpack.ProgressPlugin(),
    new CleanWebpackPlugin(),
    new HtmlWebpackPlugin({
      inject: false,
      hash: true,
      filename: './index.html',
      templateContent: function(params) {
        //<link rel="shortcut icon" type="image/png" href="./logo.png" />
        return `
<!doctype html>
<html lang="en">
  <head>
    <meta http-equiv="Content-type" content="text/html; charset=utf-8"/>
    <title>Sextant</title>
    <meta name="viewport" content="user-scalable=0, initial-scale=1, minimum-scale=1, width=device-width, height=device-height">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <script>

      var SEXTANT_HAS_INJECTED = false

      // the assets that webpack has built for us
      // we stash these so once we know our base path we can write them to the page
      window.SEXTANT_JS_ASSETS = ${JSON.stringify(params.htmlWebpackPlugin.files.js)}

      // now we need to load ourselves so we can know what the x-forwarded-prefix is
      var xhr = new XMLHttpRequest()
      xhr.onreadystatechange = function() {

        // do we have headers from the backend?
        if(xhr.readyState >= 2 && !SEXTANT_HAS_INJECTED) {

          // don't run this twice
          SEXTANT_HAS_INJECTED = true

          // see if we have a "x-forwarded-prefix" header or not
          window.SEXTANT_ROOT_PATH = xhr.getResponseHeader('x-forwarded-prefix') || '/'

          // this is the base path with a trailing '/' to use for base href and __webpack_public_path__
          window.SEXTANT_ROOT_BASE_PATH = window.SEXTANT_ROOT_PATH == '/' ? '/' : window.SEXTANT_ROOT_PATH + '/'

          // now we know where we are "actually" hosted - we can write things to the page

          // write the <base href /> tag
          var baseElement = document.createElement('base')
          baseElement.setAttribute('href', window.SEXTANT_ROOT_BASE_PATH)
          document.head.appendChild(baseElement)

          // write the favicon tag
          var favIconElement = document.createElement('link')
          favIconElement.setAttribute('rel', 'shortcut icon')
          favIconElement.setAttribute('type', 'image/png')
          favIconElement.setAttribute('href', window.SEXTANT_ROOT_PATH + '/logo.png')
          document.head.appendChild(favIconElement)

          // loop over each JS file generated by webpack and include it
          for(var i=0; i<window.SEXTANT_JS_ASSETS.length; i++) {
            var scriptPath = window.SEXTANT_ROOT_PATH + window.SEXTANT_JS_ASSETS[i]
            var scriptElement = document.createElement('script')
            scriptElement.setAttribute('src', scriptPath)
            document.body.appendChild(scriptElement)
          }
        }
      }

      // trigger the XHR against the page we are currently on
      xhr.open('HEAD', window.location.href)
      xhr.send()

    </script>
  </head>
  <body>
    <div id="root"></div>
  </body>
</html>
        `
      }
    }),
    new CopyWebpackPlugin([{
      from: 'src/assets',
      to: '',
    }]),
  ],
  optimization: {
    splitChunks: {
      chunks: 'all',
    },
  },
}
